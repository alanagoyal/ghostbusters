[project]
name = "doorbird-costume-classifier"
version = "0.1.0"
description = "Halloween costume detection system using DoorBird camera and AI classification"
requires-python = ">=3.10"
dependencies = [
    "opencv-python>=4.8.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default
# Also enable isort (`I`), pydocstyle (`D`), and more
select = ["E", "F", "I", "N", "UP", "YTT", "ASYNC", "B", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "COM812", # Trailing comma missing (conflicts with formatter)
    "ISC001", # Implicit string concatenation (conflicts with formatter)
]

# Allow autofix for all enabled rules (when `--fix` is provided)
fixable = ["ALL"]
unfixable = []

# Exclude commonly ignored directories
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
]

line-length = 100
indent-width = 4

# Assume Python 3.10+
target-version = "py310"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces, rather than tabs
indent-style = "space"

# Respect magic trailing commas
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending
line-ending = "auto"
